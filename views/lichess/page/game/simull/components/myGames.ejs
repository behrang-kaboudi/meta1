<div class="wg-box overflow-auto dir-ltr">
    <div class="wg-title h5">
        Your Simuls
    </div>
    <div class="wg-inner">
        <div id="myGames">

        </div>
    </div>
</div>
<script>
    var myGames = {
        getAvailable: () => {
            socket.emit('mySimullGames', {}, myGames.set)
        },
        redirctNewGame: (games) => {
            if (!games || games.length == 0) return;

            for (let i = 0; i < games.length; i++) {
                const gm = games[i];
                console.log('', gm);
                if (gm.blackResult === null) {
                    if (gm.acceptedTime - Date.now() > 30000) return;
                    console.log(window.location.origin)
                    window.location.href = window.location.origin + '/game/play/' + gm._id;
                }
            }
        },
        join: (id) => {
            socket.emit('joinSimull', {
                id
            })
        },
        withdraw: (id) => {
            socket.emit('withdrawSimull', {
                id
            })
        },
        start: (id) => {
            socket.emit('startSimull', {
                id
            })
        },
        getGameId: (simull) => {
            for (let i = 0; i < simull.players.length; i++) {
                if (simull.players[i] == userName) return simull.games[i];
            }
        },
        set: (simulls) => {
            let html = '';
            for (let i = 0; i < simulls.length; i++) {
                const sim = simulls[i];
                let gameId = myGames.getGameId(sim);
                // let link = `/game/play/${gameId}`;
                let link = `/simull/game/${sim._id}`;
                if (userName == sim.creatorUserName) link = `/simull/hall/${sim._id}`;
                let btn = `<a class="btn btn-outline-success" href='${link}' " > play </a>`;
                let withdraw = `<button class="btn btn-danger" onclick="availableSimulls.withdraw('${sim._id}')"> Withdraw </button>`;
                let start = `<button class="btn btn-success" onclick="availableSimulls.start('${sim._id}')"> Start </button>`;
                let waiting = `<button class="btn btn-success" > Waiting </button>`;

                if (sim.players.includes(userName) && sim.status == 'open') btn = withdraw;
                if (sim.creatorUserName == userName) {
                    if (sim.status == 'open') {
                        if (sim.players.length > 0) {
                            btn = start;
                        } else {
                            btn = waiting;
                        }
                    }


                }

                html += `<div class='d-flex p-3'>
                        <div class='text-primary'  style='width:45%'>
                            <div>
                                <a class='fs-3'>
                                    ${sim.name}  simul
                                </a>
                            </div>

                            <div>
                                ${sim.clockTime / 60} + ${sim.clockIncrement}s
                            </div>

                        </div>
                        <div  style='width:25%'>
                             ${sim.creatorUserName}
                        </div>
                        <div  style='width:10%'>
                           <i class="fas fa-user"></i> ${sim.players.length}
                        </div>
                        <div class='text-center'  style='width:10%'>
                            ${btn}
                        </div>
                    </div>
                    `;
            }
            document.getElementById('myGames').innerHTML = html;

        }
    };
    $(document).ready(() => {
        myGames.getAvailable();
        socket.on('updateAvailableSimulls', function () {
            myGames.getAvailable()
        })
    })
</script>